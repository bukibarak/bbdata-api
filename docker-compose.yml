version: '3'

services:

  ### API ###
  spring:
    build: ./components/Spring
    container_name: bbSpringAPI
    environment:
      - WAIT_HOSTS=zookeeper:2181,kafka:9092,cassandra:9042,mysql:3306
    networks: 
      - bb-network
    depends_on:
      - kafka
      - cassandra
      - mysql
      - grafana


  ### DATABASES ### 
  cassandra:
    build: ./components/cassandra
    container_name: bbCassandra
    volumes:
      - .containers/cassandra:/var/lib/cassandra
    ports: 
      - '9042:9042'
    networks:
      - bb-network

  mysql:
    image: mysql:8
    container_name: bbMySQL
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: bbdata
      MYSQL_USER: bbdata-admin
      MYSQL_PASS: bbdata
      MYSQL_DATABASE: bbdata2
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - .containers/mysql:/var/lib/mysql
      - ./components/mysql/sql:/docker-entrypoint-initdb.d
    ports: 
      - '3306:3306'
    networks:
      - bb-network

  ### PROCESSING ###
  zookeeper:
    image: 'bitnami/zookeeper:3.7'
    container_name: bbZooKeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'
    networks:
      - bb-network
    volumes:
      - .containers/zookeeper:/bitnami/zookeeper
    
  kafka:
    image: 'bitnami/kafka:3'
    restart: always
    container_name: bbKafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - .containers/kafka:/bitnami/kafka
    ports:
      - '9092:9092'
    networks:
      - bb-network  
    depends_on:
      - zookeeper

  kafka-cli:
    build: './components/kafka-cli/'
    container_name: bbKafka-cli
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - WAIT_HOSTS=zookeeper:2181,kafka:9092
    networks:
      - bb-network
    depends_on:
      - kafka

  ### MONITORING ###
  # prometheus:
  #   image: prom/prometheus
  #   container_name: bbPrometheus
  #   # user: '1000'
  #   volumes:
  #     - ./components/monitoring/config/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus:/prometheus
  #   ports:
  #     - '9090:9090'
  #   networks:
  #     - bb-network

  # grafana:
  #   image: grafana/grafana
  #   container_name: bbGrafana
  #   # user: '1000'
  #   volumes:
  #     - .grafana:/var/lib/grafana
  #   ports:
  #     - '3000:3000'
  #   networks:
  #     - bb-network
  #   depends_on:
  #     - prometheus

  
### NETWORKS ###
networks:
  bb-network:
    driver: bridge